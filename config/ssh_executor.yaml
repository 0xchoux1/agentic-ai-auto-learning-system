# AALS Module 8: SSH Executor Configuration
module:
  name: "ssh_executor"
  enabled: true
  dependencies: []

# SSH接続設定
ssh:
  # デフォルトSSH設定
  default_port: 22
  default_username: "ubuntu"
  default_key_file: "~/.ssh/id_rsa"
  
  # 接続タイムアウト（秒）
  connection_timeout: 30
  
  # 接続プールサイズ
  connection_pool_size: 10
  
  # 接続維持時間（分）
  connection_ttl_minutes: 15
  
  # Known hostsファイル（Noneで検証無効化）
  known_hosts_file: null

# 実行設定
execution:
  # デフォルトコマンドタイムアウト（秒）
  default_timeout_seconds: 300
  
  # 最大並列実行数
  max_parallel_executions: 5
  
  # エラー時の継続
  continue_on_error: false
  
  # 実行ログの最大保存サイズ（文字）
  max_log_size: 10000
  
  # リトライ設定
  retry:
    enabled: true
    max_attempts: 3
    delay_seconds: 5
    exponential_backoff: true

# 権限レベル設定
permission_levels:
  read_only:
    description: "Read-only commands (monitoring, diagnostics)"
    risk_level: "low"
    auto_approve: true
    
  low_risk:
    description: "Low risk commands (dev environment changes)"
    risk_level: "low"
    auto_approve: true
    
  medium_risk:
    description: "Medium risk commands (staging changes)"
    risk_level: "medium"
    auto_approve: false
    
  high_risk:
    description: "High risk commands (production reads)"
    risk_level: "high"
    auto_approve: false
    
  critical:
    description: "Critical commands (production changes)"
    risk_level: "critical"
    auto_approve: false

# 承認設定
approval:
  # 承認タイムアウト（分）
  approval_timeout_minutes: 30
  
  # 権限レベル別の必要承認者
  approval_required:
    read_only: []  # 承認不要
    low_risk: []   # 承認不要
    medium_risk:
      - "sre-team"
    high_risk:
      - "sre-team"
      - "team-lead"
    critical:
      - "sre-team"
      - "team-lead"
      - "on-call-engineer"
  
  # 環境別承認者オーバーライド
  environment_overrides:
    production:
      medium_risk:
        - "sre-team"
        - "production-owner"
      high_risk:
        - "sre-team"
        - "team-lead"
        - "production-owner"
    
  # 自動承認パターン
  auto_approve_patterns:
    low_risk:
      - "^systemctl status"
      - "^docker ps"
      - "^kubectl get pods"
    medium_risk:
      - "^systemctl restart.*_dev"
      - "^docker restart.*_test"

# セキュリティ設定
security:
  # コマンドサニタイズ
  sanitize_commands: true
  
  # 禁止コマンドパターン
  forbidden_patterns:
    - "rm -rf /"
    - "dd.*of=/dev/"
    - "mkfs"
    - "shutdown"
    - "reboot"
    - ":(){ :|:& };:"  # Fork bomb
  
  # 環境別制限
  environment_restrictions:
    production:
      # 本番環境では破壊的コマンドを完全禁止
      forbidden_patterns:
        - "rm -rf"
        - "drop database"
        - "truncate"
      # 許可するIPレンジ
      allowed_source_ips:
        - "10.0.0.0/8"
        - "172.16.0.0/12"
  
  # 監査ログ
  audit_logging:
    enabled: true
    log_commands: true
    log_outputs: true
    log_approval_decisions: true
    retention_days: 90

# ターゲットホスト設定
targets:
  # グループ定義
  groups:
    web_servers:
      hosts:
        - "web-01.example.com"
        - "web-02.example.com"
      username: "deploy"
      key_file: "~/.ssh/web_deploy_key"
      environment: "production"
      
    db_servers:
      hosts:
        - "db-01.example.com"
        - "db-02.example.com"
      username: "dba"
      key_file: "~/.ssh/db_admin_key"
      environment: "production"
      
    dev_servers:
      hosts:
        - "dev-01.example.com"
      username: "developer"
      key_file: "~/.ssh/dev_key"
      environment: "development"
  
  # デフォルトタグ
  default_tags:
    managed_by: "aals"
    module: "ssh_executor"

# 通知設定
notifications:
  # 承認リクエスト通知
  approval_requests:
    enabled: true
    channels:
      - "#sre-approvals"
    mention_users: true
    
  # 実行完了通知
  execution_complete:
    enabled: true
    channels:
      - "#sre-executions"
    # 通知する条件
    conditions:
      - "failed"
      - "critical_permission"
      
  # エラー通知
  errors:
    enabled: true
    channels:
      - "#sre-alerts"
    include_stack_trace: false

# パフォーマンス設定
performance:
  # コマンド実行キュー
  command_queue:
    max_size: 100
    processing_threads: 2
    
  # メトリクス収集
  metrics:
    enabled: true
    export_interval_seconds: 60
    
  # レート制限
  rate_limiting:
    enabled: true
    max_commands_per_minute: 60
    max_commands_per_host_per_minute: 10

# インテグレーション設定
integrations:
  # Alert Correlatorとの連携
  alert_correlator:
    enabled: true
    # 相関IDでの自動コンテキスト共有
    share_context: true
    # 推奨アクションの自動実行レベル
    auto_execute_level: "low_risk"
    
  # Response Orchestratorとの連携
  response_orchestrator:
    enabled: true
    # ワークフロー統合
    workflow_integration: true

# 高度な設定
advanced:
  # ジャンプホスト設定
  jump_hosts:
    production:
      host: "bastion.example.com"
      username: "jump"
      key_file: "~/.ssh/bastion_key"
      
  # プロキシ設定
  proxy:
    enabled: false
    http_proxy: null
    https_proxy: null
    no_proxy: ["localhost", "127.0.0.1"]
    
  # カスタムコマンドテンプレート
  command_templates:
    restart_service:
      template: "sudo systemctl restart {service_name}"
      permission_level: "medium_risk"
      validation_pattern: "^[a-zA-Z0-9_-]+$"
      
    check_disk_space:
      template: "df -h {path}"
      permission_level: "read_only"
      default_values:
        path: "/"